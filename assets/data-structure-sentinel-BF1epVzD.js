const t="expert-009",e="Data Structure Sentinel",a="Find simple JSON objects with string properties. These data structures must follow basic JSON syntax rules for key-value pairs.",s="expert",o=[{input:'{"name":"John","age":"30"}',shouldMatch:!0},{input:'{"status":"active"}',shouldMatch:!0},{input:'{"id":"123","type":"user","role":"admin"}',shouldMatch:!0},{input:'{"message":"Hello World"}',shouldMatch:!0},{input:'{name:"John",age:"30"}',shouldMatch:!1},{input:'{"name":John,"age":"30"}',shouldMatch:!1},{input:'{"name":"John","age":30}',shouldMatch:!1},{input:"name:John,age:30",shouldMatch:!1}],n='^\\{"[a-zA-Z_][a-zA-Z0-9_]*":"[^"]*"(?:,"[a-zA-Z_][a-zA-Z0-9_]*":"[^"]*")*\\}$',u='Validates JSON object structure: \\{ for opening brace, "[a-zA-Z_][a-zA-Z0-9_]*" for quoted keys starting with letter/underscore, : separator, "[^"]*" for quoted string values (any characters except quotes), (?:,"key":"value")* for additional key-value pairs, and \\} for closing brace.',r={id:t,title:e,description:a,difficulty:s,testCases:o,solution:n,solutionSummary:u};export{r as default,a as description,s as difficulty,t as id,n as solution,u as solutionSummary,o as testCases,e as title};
