{
  "id": "expert-001",
  "title": "Serialized Text Format",
  "description": "Validate text data that follows structured encoding rules. These strings are wrapped in quotation marks and may contain escaped characters for special symbols and formatting.",
  "difficulty": "expert",
  "testCases": [
    { "input": "\"hello\"", "shouldMatch": true },
    { "input": "\"hello world\"", "shouldMatch": true },
    { "input": "\"test\\nstring\"", "shouldMatch": true },
    { "input": "\"with \\\"quotes\\\"\"", "shouldMatch": true },
    { "input": "\"\"", "shouldMatch": true },
    { "input": "hello", "shouldMatch": false },
    { "input": "\"unterminated", "shouldMatch": false },
    { "input": "unterminated\"", "shouldMatch": false },
    { "input": "\"bad\\escape\"", "shouldMatch": false },
    { "input": "\"multi\nline\"", "shouldMatch": false }
  ],
  "solution": "^\"(?:[^\"\\\\\\n]|\\\\[\"\\\\nrtfb/])*\"$",
  "solutionSummary": "This pattern validates JSON strings by requiring quotes at start and end, then allowing either normal characters (excluding quotes, backslashes, and newlines) or valid escape sequences. The [^\"\\\\\\n] means 'any character except quote, backslash, or newline', while \\\\[\"\\\\nrtfb/] matches proper JSON escape sequences like \\n, \\t, etc."
}
