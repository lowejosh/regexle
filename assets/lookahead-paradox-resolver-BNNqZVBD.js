const a="nightmare-004",t="Lookahead Paradox Resolver",e="Advanced pattern matching requires identifying strings where every character is followed by a different character, creating complex lookahead chains. The string must contain only letters, and no two adjacent characters can be the same, demonstrating advanced lookahead mastery.",n="nightmare",o=[{input:"abc",shouldMatch:!0},{input:"abcd",shouldMatch:!0},{input:"xyz",shouldMatch:!0},{input:"abcdef",shouldMatch:!0},{input:"aa",shouldMatch:!1},{input:"abb",shouldMatch:!1},{input:"abcc",shouldMatch:!1},{input:"aabb",shouldMatch:!1}],c="^(?:([a-zA-Z])(?!\\1))*[a-zA-Z]?$",r="Uses non-capturing group (?:), capturing group for each character ([a-zA-Z]), negative lookahead (?!\\1) to ensure next character differs from current, with quantifier and optional final character. Demonstrates advanced lookahead techniques and backreference constraints.",s={id:a,title:t,description:e,difficulty:n,testCases:o,solution:c,solutionSummary:r};export{s as default,e as description,n as difficulty,a as id,c as solution,r as solutionSummary,o as testCases,t as title};
