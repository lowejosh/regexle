const e="expert-003",t="Email Header Archaeologist",a="Validate electronic addresses that conform to international messaging standards. These complex identifiers support advanced features like quoted strings, special characters, and extended local parts with specific formatting rules.",s="expert",o=[{input:"user@example.com",shouldMatch:!0},{input:"user.name@example.com",shouldMatch:!0},{input:"user+tag@example.com",shouldMatch:!0},{input:'"quoted user"@example.com',shouldMatch:!0},{input:"user@sub.example.com",shouldMatch:!0},{input:"user@[192.168.1.1]",shouldMatch:!0},{input:"@example.com",shouldMatch:!1},{input:"user@",shouldMatch:!1},{input:"user..name@example.com",shouldMatch:!1},{input:"user@.example.com",shouldMatch:!1},{input:"user@example.",shouldMatch:!1},{input:"user name@example.com",shouldMatch:!1}],r='^(?:"[^"]*"|[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+)*)@(?:\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\]|[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$',i='This pattern validates RFC-compliant emails by handling two local part formats: quoted strings ("...") or regular characters with dots. The (?:...|...) alternation allows either format before the @. After @, it accepts either IP addresses in brackets [192.168.1.1] or domain names with length restrictions (up to 61 characters between dots), preventing consecutive dots and ensuring proper formatting.',n={id:e,title:t,description:a,difficulty:s,testCases:o,solution:r,solutionSummary:i};export{n as default,a as description,s as difficulty,e as id,r as solution,i as solutionSummary,o as testCases,t as title};
