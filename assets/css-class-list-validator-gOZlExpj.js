const s="expert-010",a="CSS Class List Validator",t="Validate a list of CSS classes. A valid list consists of one or more class names, separated by single spaces. Class names can contain letters, numbers, and hyphens, but cannot start with a number.",e="expert",n=[{input:"container",shouldMatch:!0},{input:"btn btn-primary",shouldMatch:!0},{input:"card-header text-bold",shouldMatch:!0},{input:"grid grid-cols-3 gap-4",shouldMatch:!0},{input:"1st-item",shouldMatch:!1},{input:"btn  btn-primary",shouldMatch:!1},{input:"container-",shouldMatch:!1},{input:" text-bold",shouldMatch:!1}],o="^[a-zA-Z](?:[a-zA-Z0-9]|-(?=[a-zA-Z0-9]))*(?:\\s[a-zA-Z](?:[a-zA-Z0-9]|-(?=[a-zA-Z0-9]))*)*$",l="This complex pattern validates a space-separated list of CSS classes. `[a-zA-Z][a-zA-Z0-9\\-]*` defines a valid class name (starts with a letter, followed by letters, numbers, or hyphens). The `(?!-)` is a negative lookahead to ensure class names don't end with a hyphen. The second part, `(\\s[a-zA-Z][a-zA-Z0-9\\-]*(?!-))*`, is a group that matches subsequent classes, each preceded by a single space and also not ending in a hyphen. The outer `*` allows for zero or more additional classes.",i={id:s,title:a,description:t,difficulty:e,testCases:n,solution:o,solutionSummary:l};export{i as default,t as description,e as difficulty,s as id,o as solution,l as solutionSummary,n as testCases,a as title};
