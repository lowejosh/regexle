const t="expert-001",e="Serialized Text Format",s="Validate text data that follows structured encoding rules. These strings are wrapped in quotation marks and may contain escaped characters for special symbols and formatting.",a="expert",n=[{input:'"hello"',shouldMatch:!0},{input:'"hello world"',shouldMatch:!0},{input:'"test\\nstring"',shouldMatch:!0},{input:'"with \\"quotes\\""',shouldMatch:!0},{input:'""',shouldMatch:!0},{input:"hello",shouldMatch:!1},{input:'"unterminated',shouldMatch:!1},{input:'unterminated"',shouldMatch:!1},{input:'"bad\\escape"',shouldMatch:!1},{input:`"multi
line"`,shouldMatch:!1}],i='^"(?:[^"\\\\\\n]|\\\\["\\\\nrtfb/])*"$',l=`This pattern validates JSON strings by requiring quotes at start and end, then allowing either normal characters (excluding quotes, backslashes, and newlines) or valid escape sequences. The [^"\\\\\\n] means 'any character except quote, backslash, or newline', while \\\\["\\\\nrtfb/] matches proper JSON escape sequences like \\n, \\t, etc.`,o={id:t,title:e,description:s,difficulty:a,testCases:n,solution:i,solutionSummary:l};export{o as default,s as description,a as difficulty,t as id,i as solution,l as solutionSummary,n as testCases,e as title};
