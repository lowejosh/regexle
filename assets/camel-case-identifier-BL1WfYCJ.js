const e="medium-010",t="Camel Case to Snake Case",a="This is not a real puzzle, you've been tasked with creating a regex that can identify words in a camel-cased string.",s="medium",o=[{input:"myVariableName",shouldMatch:!0},{input:"anotherExample",shouldMatch:!0},{input:"aShortOne",shouldMatch:!0},{input:"single",shouldMatch:!0},{input:"MyClass",shouldMatch:!1},{input:"variable_name",shouldMatch:!1},{input:"variable-name",shouldMatch:!1},{input:"AVariable",shouldMatch:!1}],i="^[a-z]+([A-Z][a-z]*)*$",l="This pattern validates camelCase strings that start with a lowercase letter. `^[a-z]+` ensures it begins with one or more lowercase letters. The group `([A-Z][a-z]*)*` then matches zero or more subsequent 'words,' each starting with a capital letter followed by zero or more lowercase letters.",n={id:e,title:t,description:a,difficulty:s,testCases:o,solution:i,solutionSummary:l};export{n as default,a as description,s as difficulty,e as id,i as solution,l as solutionSummary,o as testCases,t as title};
