{
  "id": "expert-004",
  "title": "Mathematical Expression Oracle",
  "description": "Recognize computational formulas that combine numbers with arithmetic operations. These expressions contain numeric values connected by mathematical operators, following standard algebraic notation conventions.",
  "difficulty": "expert",
  "testCases": [
    { "input": "2+3", "shouldMatch": true },
    { "input": "10-5", "shouldMatch": true },
    { "input": "4*7", "shouldMatch": true },
    { "input": "15/3", "shouldMatch": true },
    { "input": "(2+3)*4", "shouldMatch": true },
    { "input": "12.5+3.7", "shouldMatch": true },
    { "input": "2++3", "shouldMatch": false },
    { "input": "2+", "shouldMatch": false },
    { "input": "+3", "shouldMatch": false },
    { "input": "2+(3*)", "shouldMatch": false },
    { "input": "((2+3)", "shouldMatch": false },
    { "input": "2**/3", "shouldMatch": false }
  ],
  "solution": "^(?:\\()?-?\\d+(?:\\.\\d+)?(?:[+\\-*/](?:\\()?-?\\d+(?:\\.\\d+)?(?:\\))?)*(?:\\)?(?:[+\\-*/](?:\\()?-?\\d+(?:\\.\\d+)?(?:\\))?)*)*$",
  "solutionSummary": "This pattern validates mathematical expressions by allowing optional parentheses (?:\\()?, optional negative signs -?, digits with optional decimals \\d+(?:\\.\\d+)?, and operators [+\\-*/]. The nested (?:...)* structures handle multiple operations while ensuring each number can be optionally wrapped in parentheses, creating flexible expression matching."
}
