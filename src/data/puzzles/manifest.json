{
  "puzzles": [
    {
      "id": "easy-001",
      "title": "Digital Correspondence",
      "difficulty": "easy",
      "category": "communication",
      "tags": ["validation", "contact"],
      "file": "easy/digital-correspondence.json",
      "summary": "Email validation - basic email format matching"
    },
    {
      "id": "easy-002",
      "title": "Voice Connection Format",
      "difficulty": "easy",
      "category": "communication",
      "tags": ["format", "numbers"],
      "file": "easy/voice-connection-format.json",
      "summary": "US phone numbers - (123) 456-7890 format"
    },
    {
      "id": "easy-003",
      "title": "Dotted Decimal Dance",
      "difficulty": "easy",
      "category": "numbers",
      "tags": ["format", "decimal"],
      "file": "easy/dotted-decimal-dance.json",
      "summary": "IP addresses - basic IPv4 validation"
    },
    {
      "id": "easy-004",
      "title": "Binary Truth Seekers",
      "difficulty": "easy",
      "category": "logic",
      "tags": ["boolean", "simple"],
      "file": "easy/binary-truth-seekers.json",
      "summary": "Boolean values - matching true/false literals"
    },
    {
      "id": "easy-005",
      "title": "Social Media Hashtag Hunter",
      "difficulty": "easy",
      "category": "text",
      "tags": ["social", "hashtag"],
      "file": "easy/social-media-hashtag-hunter.json",
      "summary": "Social media hashtags - # followed by letters/numbers/underscores"
    },
    {
      "id": "easy-006",
      "title": "Isolated Word",
      "difficulty": "easy",
      "category": "text",
      "tags": ["word", "boundary"],
      "file": "easy/isolated-word.json",
      "summary": "Match a whole word using word boundaries"
    },
    {
      "id": "easy-007",
      "title": "Flexible Acronym",
      "difficulty": "easy",
      "category": "text",
      "tags": ["case-insensitive", "acronym"],
      "file": "easy/flexible-acronym.json",
      "summary": "Match text regardless of case"
    },
    {
      "id": "easy-008",
      "title": "Optional Plurals",
      "difficulty": "easy",
      "category": "text",
      "tags": ["optional", "plural"],
      "file": "easy/optional-plurals.json",
      "summary": "Match both singular and plural forms"
    },
    {
      "id": "easy-009",
      "title": "Repeating Digits",
      "difficulty": "easy",
      "category": "numbers",
      "tags": ["repeat", "backreference"],
      "file": "easy/repeating-digits.json",
      "summary": "Match a specific number of repeating characters"
    },
    {
      "id": "easy-006",
      "title": "Isolated Word",
      "difficulty": "easy",
      "category": "text",
      "tags": ["word", "boundary"],
      "file": "easy/isolated-word.json",
      "summary": "Match a whole word using word boundaries"
    },
    {
      "id": "easy-007",
      "title": "Flexible Acronym",
      "difficulty": "easy",
      "category": "text",
      "tags": ["case-insensitive", "acronym"],
      "file": "easy/flexible-acronym.json",
      "summary": "Match text regardless of case"
    },
    {
      "id": "easy-008",
      "title": "Optional Plurals",
      "difficulty": "easy",
      "category": "text",
      "tags": ["optional", "plural"],
      "file": "easy/optional-plurals.json",
      "summary": "Match both singular and plural forms"
    },
    {
      "id": "easy-009",
      "title": "Repeating Digits",
      "difficulty": "easy",
      "category": "numbers",
      "tags": ["repeat", "backreference"],
      "file": "easy/repeating-digits.json",
      "summary": "Match a specific number of repeating characters"
    },
    {
      "id": "medium-001",
      "title": "Markup Containers",
      "difficulty": "medium",
      "category": "structure",
      "tags": ["syntax", "web"],
      "file": "medium/markup-containers.json",
      "summary": "HTML opening tags - simple tag name matching"
    },
    {
      "id": "medium-002",
      "title": "Visual Spectrum Codes",
      "difficulty": "medium",
      "category": "display",
      "tags": ["format", "visual"],
      "file": "medium/visual-spectrum-codes.json",
      "summary": "Hex color codes - 3/6 digit hex validation"
    },
    {
      "id": "medium-003",
      "title": "Temporal Sequence Cipher",
      "difficulty": "medium",
      "category": "time",
      "tags": ["date", "format"],
      "file": "medium/temporal-sequence-cipher.json",
      "summary": "Date formats - DD/MM/YYYY patterns"
    },
    {
      "id": "medium-004",
      "title": "Slashed Path Wanderer",
      "difficulty": "medium",
      "category": "navigation",
      "tags": ["path", "system"],
      "file": "medium/slashed-path-wanderer.json",
      "summary": "File paths - Unix-style path validation"
    },
    {
      "id": "medium-005",
      "title": "Underscored Identity Crisis",
      "difficulty": "medium",
      "category": "identity",
      "tags": ["naming", "convention"],
      "file": "medium/underscored-identity-crisis.json",
      "summary": "Variable names - underscore naming conventions"
    },
    {
      "id": "medium-006",
      "title": "License Plate Detective",
      "difficulty": "medium",
      "category": "identity",
      "tags": ["format", "vehicle"],
      "file": "medium/license-plate-detective.json",
      "summary": "Vehicle license plates - 3 letters dash 3 numbers"
    },
    {
      "id": "medium-007",
      "title": "Time Zone Traveler",
      "difficulty": "medium",
      "category": "time",
      "tags": ["format", "military"],
      "file": "medium/time-zone-traveler.json",
      "summary": "24-hour time format - HH:MM military time"
    },
    {
      "id": "medium-008",
      "title": "Quoted Dialogue",
      "difficulty": "medium",
      "category": "text",
      "tags": ["quotes", "greedy"],
      "file": "medium/quoted-dialogue.json",
      "summary": "Match content within double quotes"
    },
    {
      "id": "medium-009",
      "title": "Temperature Readings",
      "difficulty": "medium",
      "category": "numbers",
      "tags": ["optional", "sign"],
      "file": "medium/temperature-readings.json",
      "summary": "Match numbers with optional signs"
    },
    {
      "id": "medium-010",
      "title": "Camel Case Identifier",
      "difficulty": "medium",
      "category": "identity",
      "tags": ["naming", "convention"],
      "file": "medium/camel-case-identifier.json",
      "summary": "Validate camelCase variable names"
    },
    {
      "id": "medium-008",
      "title": "Quoted Dialogue",
      "difficulty": "medium",
      "category": "text",
      "tags": ["quotes", "greedy"],
      "file": "medium/quoted-dialogue.json",
      "summary": "Match content within double quotes"
    },
    {
      "id": "medium-009",
      "title": "Temperature Readings",
      "difficulty": "medium",
      "category": "numbers",
      "tags": ["optional", "sign"],
      "file": "medium/temperature-readings.json",
      "summary": "Match numbers with optional signs"
    },
    {
      "id": "medium-010",
      "title": "Camel Case Identifier",
      "difficulty": "medium",
      "category": "identity",
      "tags": ["naming", "convention"],
      "file": "medium/camel-case-identifier.json",
      "summary": "Validate camelCase variable names"
    },
    {
      "id": "hard-001",
      "title": "Access Key Strength",
      "difficulty": "hard",
      "category": "security",
      "tags": ["validation", "complexity"],
      "file": "hard/access-key-strength.json",
      "summary": "Password validation - complex requirements"
    },
    {
      "id": "hard-002",
      "title": "Network Node Addresses",
      "difficulty": "hard",
      "category": "networking",
      "tags": ["format", "protocol"],
      "file": "hard/network-node-addresses.json",
      "summary": "MAC addresses - colon-separated hex pairs"
    },
    {
      "id": "hard-003",
      "title": "Credit Card Whisperer",
      "difficulty": "hard",
      "category": "finance",
      "tags": ["payment", "validation"],
      "file": "hard/credit-card-whisperer.json",
      "summary": "Credit card numbers - various card formats"
    },
    {
      "id": "hard-004",
      "title": "Alphabetic Soup Sorter",
      "difficulty": "hard",
      "category": "text",
      "tags": ["sorting", "alpha"],
      "file": "hard/alphabetic-soup-sorter.json",
      "summary": "Sorted strings - alphabetically ordered text"
    },
    {
      "id": "hard-005",
      "title": "Version Number Archaeologist",
      "difficulty": "hard",
      "category": "versioning",
      "tags": ["semantic", "software"],
      "file": "hard/version-number-archaeologist.json",
      "summary": "Semantic versioning - x.y.z format"
    },
    {
      "id": "hard-006",
      "title": "Book ISBN Validator",
      "difficulty": "hard",
      "category": "identity",
      "tags": ["format", "books"],
      "file": "hard/book-isbn-validator.json",
      "summary": "ISBN-10 book identifiers - 9 digits plus check digit"
    },
    {
      "id": "hard-007",
      "title": "Markdown Image Links",
      "difficulty": "hard",
      "category": "structure",
      "tags": ["markdown", "links"],
      "file": "hard/markdown-image-links.json",
      "summary": "Validate Markdown image syntax"
    },
    {
      "id": "hard-008",
      "title": "Domain Name Validator",
      "difficulty": "hard",
      "category": "networking",
      "tags": ["validation", "dns"],
      "file": "hard/domain-name-validator.json",
      "summary": "Validate domain names with complex rules"
    },
    {
      "id": "hard-007",
      "title": "Markdown Image Links",
      "difficulty": "hard",
      "category": "structure",
      "tags": ["markdown", "links"],
      "file": "hard/markdown-image-links.json",
      "summary": "Validate Markdown image syntax"
    },
    {
      "id": "hard-008",
      "title": "Domain Name Validator",
      "difficulty": "hard",
      "category": "networking",
      "tags": ["validation", "dns"],
      "file": "hard/domain-name-validator.json",
      "summary": "Validate domain names with complex rules"
    },
    {
      "id": "expert-001",
      "title": "Serialized Text Format",
      "difficulty": "expert",
      "category": "data",
      "tags": ["format", "structure"],
      "file": "expert/serialized-text-format.json",
      "summary": "JSON-like structures - nested data patterns"
    },
    {
      "id": "expert-002",
      "title": "Nested Parentheses Zen Master",
      "difficulty": "expert",
      "category": "structure",
      "tags": ["recursive", "balance"],
      "file": "expert/nested-parentheses-zen-master.json",
      "summary": "Balanced parentheses - recursive matching"
    },
    {
      "id": "expert-003",
      "title": "Email Header Archaeologist",
      "difficulty": "expert",
      "category": "protocols",
      "tags": ["rfc", "complex"],
      "file": "expert/email-header-archaeologist.json",
      "summary": "RFC email headers - complex email parsing"
    },
    {
      "id": "expert-004",
      "title": "Mathematical Expression Oracle",
      "difficulty": "expert",
      "category": "mathematics",
      "tags": ["algebra", "parsing"],
      "file": "expert/mathematical-expression-oracle.json",
      "summary": "Math expressions - algebraic notation"
    },
    {
      "id": "expert-005",
      "title": "Chemical Formula Parser",
      "difficulty": "expert",
      "category": "science",
      "tags": ["chemistry", "molecules"],
      "file": "expert/chemical-formula-parser.json",
      "summary": "Chemical formulas - molecular structure notation"
    },
    {
      "id": "expert-006",
      "title": "UUID Identifier",
      "difficulty": "expert",
      "category": "identity",
      "tags": ["format", "uuid"],
      "file": "expert/uuid-identifier.json",
      "summary": "Validate universally unique identifiers (UUIDs)"
    },
    {
      "id": "expert-006",
      "title": "UUID Identifier",
      "difficulty": "expert",
      "category": "identity",
      "tags": ["format", "uuid"],
      "file": "expert/uuid-identifier.json",
      "summary": "Validate universally unique identifiers (UUIDs)"
    },
    {
      "id": "nightmare-002",
      "title": "Whitespace Phantom",
      "difficulty": "nightmare",
      "category": "invisible",
      "tags": ["whitespace", "hidden"],
      "file": "nightmare/whitespace-phantom.json",
      "summary": "Invisible characters - whitespace edge cases"
    },
    {
      "id": "nightmare-003",
      "title": "Prime Number Sieve",
      "difficulty": "nightmare",
      "category": "mathematics",
      "tags": ["prime", "unary", "lookahead"],
      "file": "nightmare/prime-number-sieve.json",
      "summary": "Prime number validation using unary representation"
    }
  ],
  "categories": [
    {
      "id": "communication",
      "name": "Communication",
      "description": "Patterns for human interaction formats"
    },
    {
      "id": "structure",
      "name": "Structure",
      "description": "Patterns for organized content"
    },
    {
      "id": "display",
      "name": "Display",
      "description": "Patterns for visual representation"
    },
    {
      "id": "security",
      "name": "Security",
      "description": "Patterns for access control"
    },
    {
      "id": "networking",
      "name": "Networking",
      "description": "Patterns for network protocols"
    },
    {
      "id": "data",
      "name": "Data",
      "description": "Patterns for data serialization"
    },
    {
      "id": "numbers",
      "name": "Numbers",
      "description": "Patterns for numeric formats"
    },
    {
      "id": "logic",
      "name": "Logic",
      "description": "Patterns for boolean operations"
    },
    {
      "id": "time",
      "name": "Time",
      "description": "Patterns for temporal data"
    },
    {
      "id": "navigation",
      "name": "Navigation",
      "description": "Patterns for path structures"
    },
    {
      "id": "identity",
      "name": "Identity",
      "description": "Patterns for naming conventions"
    },
    {
      "id": "finance",
      "name": "Finance",
      "description": "Patterns for financial data"
    },
    {
      "id": "text",
      "name": "Text",
      "description": "Patterns for text processing"
    },
    {
      "id": "versioning",
      "name": "Versioning",
      "description": "Patterns for version control"
    },
    {
      "id": "protocols",
      "name": "Protocols",
      "description": "Patterns for communication protocols"
    },
    {
      "id": "mathematics",
      "name": "Mathematics",
      "description": "Patterns for mathematical expressions"
    },
    {
      "id": "science",
      "name": "Science",
      "description": "Patterns for scientific notation and formulas"
    },
    {
      "id": "meta",
      "name": "Meta",
      "description": "Patterns that challenge the concept of patterns"
    },
    {
      "id": "invisible",
      "name": "Invisible",
      "description": "Patterns for the unseen"
    }
  ]
}
