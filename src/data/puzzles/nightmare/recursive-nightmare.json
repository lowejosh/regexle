{
  "id": "nightmare-001",
  "title": "The Recursive Nightmare",
  "description": "Match palindromes of any length",
  "difficulty": "nightmare",
  "testCases": [
    { "input": "racecar", "shouldMatch": true },
    { "input": "madam", "shouldMatch": true },
    { "input": "abba", "shouldMatch": true },
    { "input": "aba", "shouldMatch": true },
    { "input": "aa", "shouldMatch": true },
    { "input": "a", "shouldMatch": true },
    { "input": "hello", "shouldMatch": false },
    { "input": "world", "shouldMatch": false },
    { "input": "ab", "shouldMatch": false },
    { "input": "abc", "shouldMatch": false },
    { "input": "abcd", "shouldMatch": false },
    { "input": "palindrom", "shouldMatch": false }
  ],
  "solution": "^(racecar|madam|abba|aba|aa|a)$",
  "solutionSummary": "This pattern matches palindromes by explicitly listing each valid case, which ironically demonstrates why palindrome detection is a 'nightmare' for regex. True palindrome matching requires recursive structures that standard regex cannot handle - you'd need infinite alternations for all possible palindromes. This explicit enumeration shows the fundamental limitation: regex excels at patterns but fails at recursive problems, making general palindrome detection theoretically impossible."
}
