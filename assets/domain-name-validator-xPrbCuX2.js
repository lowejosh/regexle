const t="hard-008",a="Domain Name Validator",o="Match valid domain names, which consist of two or more labels separated by dots. Each label must not start or end with a hyphen.",e="hard",s=[{input:"example.com",shouldMatch:!0},{input:"sub.domain.co.uk",shouldMatch:!0},{input:"a-b-c.net",shouldMatch:!0},{input:"123.org",shouldMatch:!0},{input:"-start.com",shouldMatch:!1},{input:"end-.com",shouldMatch:!1},{input:"no-tld",shouldMatch:!1},{input:"example..com",shouldMatch:!1}],n="^([a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,}$",i="This complex pattern validates domain names. `([a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\.)+` matches one or more subdomains, ensuring they don't start or end with a hyphen. `[a-zA-Z]{2,}` matches the top-level domain (TLD) with at least two letters. It's a practical example of building a robust validator.",l={id:t,title:a,description:o,difficulty:e,testCases:s,solution:n,solutionSummary:i};export{l as default,o as description,e as difficulty,t as id,n as solution,i as solutionSummary,s as testCases,a as title};
